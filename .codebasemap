{
  "metadata": {
    "version": 1,
    "root": "/Users/carl/Development/agents/cc-workspace-manager",
    "createdAt": "2025-08-29T21:34:59.991Z",
    "updatedAt": "2025-08-29T21:34:59.991Z",
    "totalFiles": 22
  },
  "tree": {
    "name": "cc-workspace-manager",
    "type": "dir",
    "children": [
      {
        "name": "src",
        "type": "dir",
        "children": [
          {
            "name": "utils",
            "type": "dir",
            "children": [
              {
                "name": "security.ts",
                "type": "file"
              }
            ]
          },
          {
            "name": "fsops.ts",
            "type": "file"
          },
          {
            "name": "git.ts",
            "type": "file"
          },
          {
            "name": "index.ts",
            "type": "file"
          },
          {
            "name": "package.ts",
            "type": "file"
          },
          {
            "name": "pm.ts",
            "type": "file"
          },
          {
            "name": "prompts.ts",
            "type": "file"
          },
          {
            "name": "types.ts",
            "type": "file"
          },
          {
            "name": "ui.ts",
            "type": "file"
          },
          {
            "name": "workspace.ts",
            "type": "file"
          }
        ]
      },
      {
        "name": "tests",
        "type": "dir",
        "children": [
          {
            "name": "fixtures",
            "type": "dir",
            "children": [
              {
                "name": "packageJsonFixtures.ts",
                "type": "file"
              }
            ]
          },
          {
            "name": "utils",
            "type": "dir",
            "children": [
              {
                "name": "errorMatchers.ts",
                "type": "file"
              },
              {
                "name": "index.ts",
                "type": "file"
              },
              {
                "name": "testDir.ts",
                "type": "file"
              }
            ]
          },
          {
            "name": "fsops.test.ts",
            "type": "file"
          },
          {
            "name": "git.test.ts",
            "type": "file"
          },
          {
            "name": "index.test.ts",
            "type": "file"
          },
          {
            "name": "integration.test.ts",
            "type": "file"
          },
          {
            "name": "package.test.ts",
            "type": "file"
          },
          {
            "name": "pm.test.ts",
            "type": "file"
          },
          {
            "name": "prompts.test.ts",
            "type": "file"
          }
        ]
      },
      {
        "name": "vitest.config.ts",
        "type": "file"
      }
    ]
  },
  "nodes": [
    "src/fsops.ts",
    "src/git.ts",
    "src/index.ts",
    "src/package.ts",
    "src/pm.ts",
    "src/prompts.ts",
    "src/types.ts",
    "src/ui.ts",
    "src/utils/security.ts",
    "src/workspace.ts",
    "tests/fixtures/packageJsonFixtures.ts",
    "tests/fsops.test.ts",
    "tests/git.test.ts",
    "tests/index.test.ts",
    "tests/integration.test.ts",
    "tests/package.test.ts",
    "tests/pm.test.ts",
    "tests/prompts.test.ts",
    "tests/utils/errorMatchers.ts",
    "tests/utils/index.ts",
    "tests/utils/testDir.ts",
    "vitest.config.ts"
  ],
  "edges": [
    {
      "from": "src/fsops.ts",
      "to": "src/ui.ts"
    },
    {
      "from": "src/fsops.ts",
      "to": "src/utils/security.ts"
    },
    {
      "from": "src/git.ts",
      "to": "src/ui.ts"
    },
    {
      "from": "src/git.ts",
      "to": "src/utils/security.ts"
    },
    {
      "from": "src/index.ts",
      "to": "src/package.ts"
    },
    {
      "from": "src/index.ts",
      "to": "src/prompts.ts"
    },
    {
      "from": "src/index.ts",
      "to": "src/types.ts"
    },
    {
      "from": "src/index.ts",
      "to": "src/ui.ts"
    },
    {
      "from": "src/index.ts",
      "to": "src/utils/security.ts"
    },
    {
      "from": "src/index.ts",
      "to": "src/workspace.ts"
    },
    {
      "from": "src/package.ts",
      "to": "src/pm.ts"
    },
    {
      "from": "src/package.ts",
      "to": "src/types.ts"
    },
    {
      "from": "src/package.ts",
      "to": "src/ui.ts"
    },
    {
      "from": "src/pm.ts",
      "to": "src/utils/security.ts"
    },
    {
      "from": "src/prompts.ts",
      "to": "src/git.ts"
    },
    {
      "from": "src/prompts.ts",
      "to": "src/types.ts"
    },
    {
      "from": "src/prompts.ts",
      "to": "src/ui.ts"
    },
    {
      "from": "src/prompts.ts",
      "to": "src/utils/security.ts"
    },
    {
      "from": "src/workspace.ts",
      "to": "src/fsops.ts"
    },
    {
      "from": "src/workspace.ts",
      "to": "src/git.ts"
    },
    {
      "from": "src/workspace.ts",
      "to": "src/pm.ts"
    },
    {
      "from": "src/workspace.ts",
      "to": "src/types.ts"
    },
    {
      "from": "src/workspace.ts",
      "to": "src/ui.ts"
    },
    {
      "from": "src/workspace.ts",
      "to": "src/utils/security.ts"
    },
    {
      "from": "tests/fsops.test.ts",
      "to": "src/fsops.ts"
    },
    {
      "from": "tests/fsops.test.ts",
      "to": "tests/utils/testDir.ts"
    },
    {
      "from": "tests/git.test.ts",
      "to": "src/git.ts"
    },
    {
      "from": "tests/git.test.ts",
      "to": "src/utils/security.ts"
    },
    {
      "from": "tests/git.test.ts",
      "to": "tests/utils/errorMatchers.ts"
    },
    {
      "from": "tests/git.test.ts",
      "to": "tests/utils/testDir.ts"
    },
    {
      "from": "tests/index.test.ts",
      "to": "src/index.ts"
    },
    {
      "from": "tests/index.test.ts",
      "to": "src/package.ts"
    },
    {
      "from": "tests/index.test.ts",
      "to": "src/prompts.ts"
    },
    {
      "from": "tests/index.test.ts",
      "to": "src/ui.ts"
    },
    {
      "from": "tests/index.test.ts",
      "to": "src/workspace.ts"
    },
    {
      "from": "tests/index.test.ts",
      "to": "tests/utils/errorMatchers.ts"
    },
    {
      "from": "tests/integration.test.ts",
      "to": "src/fsops.ts"
    },
    {
      "from": "tests/integration.test.ts",
      "to": "src/git.ts"
    },
    {
      "from": "tests/integration.test.ts",
      "to": "src/pm.ts"
    },
    {
      "from": "tests/integration.test.ts",
      "to": "src/types.ts"
    },
    {
      "from": "tests/integration.test.ts",
      "to": "src/workspace.ts"
    },
    {
      "from": "tests/integration.test.ts",
      "to": "tests/fixtures/packageJsonFixtures.ts"
    },
    {
      "from": "tests/integration.test.ts",
      "to": "tests/utils/errorMatchers.ts"
    },
    {
      "from": "tests/integration.test.ts",
      "to": "tests/utils/testDir.ts"
    },
    {
      "from": "tests/package.test.ts",
      "to": "src/package.ts"
    },
    {
      "from": "tests/package.test.ts",
      "to": "src/types.ts"
    },
    {
      "from": "tests/pm.test.ts",
      "to": "src/pm.ts"
    },
    {
      "from": "tests/pm.test.ts",
      "to": "tests/utils/testDir.ts"
    },
    {
      "from": "tests/prompts.test.ts",
      "to": "src/git.ts"
    },
    {
      "from": "tests/prompts.test.ts",
      "to": "src/prompts.ts"
    },
    {
      "from": "tests/prompts.test.ts",
      "to": "src/ui.ts"
    },
    {
      "from": "tests/prompts.test.ts",
      "to": "tests/utils/errorMatchers.ts"
    },
    {
      "from": "tests/utils/index.ts",
      "to": "tests/fixtures/packageJsonFixtures.ts"
    },
    {
      "from": "tests/utils/index.ts",
      "to": "tests/utils/errorMatchers.ts"
    },
    {
      "from": "tests/utils/index.ts",
      "to": "tests/utils/testDir.ts"
    }
  ],
  "files": {
    "src/fsops.ts": {
      "imports": [
        {
          "from": "execa",
          "kind": "import"
        },
        {
          "from": "fs",
          "kind": "import"
        },
        {
          "from": "path",
          "kind": "import"
        },
        {
          "from": "fs-extra",
          "kind": "import"
        },
        {
          "from": "fs/promises",
          "kind": "import"
        },
        {
          "from": "./ui.js",
          "kind": "import"
        },
        {
          "from": "./utils/security.js",
          "kind": "import"
        }
      ],
      "dependencies": [
        "src/ui.ts",
        "src/utils/security.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/git.ts": {
      "imports": [
        {
          "from": "execa",
          "kind": "import",
          "imported": [
            "execa"
          ]
        },
        {
          "from": "path",
          "kind": "import",
          "imported": [
            "resolve"
          ]
        },
        {
          "from": "fs",
          "kind": "import",
          "imported": [
            "existsSync",
            "statSync"
          ]
        },
        {
          "from": "fs/promises",
          "kind": "import",
          "imported": [
            "readdir"
          ]
        },
        {
          "from": "path",
          "kind": "import",
          "imported": [
            "join"
          ]
        },
        {
          "from": "./ui.js",
          "kind": "import",
          "imported": [
            "ui"
          ]
        },
        {
          "from": "./utils/security.js",
          "kind": "import",
          "imported": [
            "SecurityValidator"
          ]
        }
      ],
      "dependencies": [
        "src/ui.ts",
        "src/utils/security.ts"
      ],
      "functions": [
        {
          "name": "scanDirGenerator",
          "params": [
            {
              "name": "dir",
              "type": "string"
            },
            {
              "name": "depth",
              "type": "number"
            }
          ],
          "isAsync": true,
          "isExported": false,
          "returnType": "AsyncGenerator<string>",
          "isGenerator": true
        },
        {
          "name": "discoverRepos",
          "params": [
            {
              "name": "baseDir",
              "type": "string"
            }
          ],
          "isAsync": true,
          "isExported": true,
          "returnType": "Promise<string[]>"
        },
        {
          "name": "currentBranch",
          "params": [
            {
              "name": "repoPath",
              "type": "string"
            }
          ],
          "isAsync": true,
          "isExported": true,
          "returnType": "Promise<string>"
        },
        {
          "name": "addWorktree",
          "params": [
            {
              "name": "baseRepo",
              "type": "string"
            },
            {
              "name": "branch",
              "type": "string"
            },
            {
              "name": "worktreeDir",
              "type": "string"
            }
          ],
          "isAsync": true,
          "isExported": true,
          "returnType": "Promise<void>"
        },
        {
          "name": "isBranchCheckedOut",
          "params": [
            {
              "name": "repoPath",
              "type": "string"
            },
            {
              "name": "branch",
              "type": "string"
            }
          ],
          "isAsync": true,
          "isExported": true,
          "returnType": "Promise<boolean>"
        }
      ],
      "classes": [],
      "constants": [
        {
          "name": "repoCache",
          "initKind": "unknown",
          "isExported": false
        },
        {
          "name": "DEFAULT_CACHE_TTL",
          "initKind": "unknown",
          "isExported": false
        }
      ]
    },
    "src/index.ts": {
      "imports": [
        {
          "from": "./prompts.js",
          "kind": "import"
        },
        {
          "from": "./workspace.js",
          "kind": "import"
        },
        {
          "from": "./package.js",
          "kind": "import"
        },
        {
          "from": "./ui.js",
          "kind": "import"
        },
        {
          "from": "./utils/security.js",
          "kind": "import"
        },
        {
          "from": "fs-extra",
          "kind": "import"
        },
        {
          "from": "fs",
          "kind": "import"
        },
        {
          "from": "url",
          "kind": "import"
        },
        {
          "from": "path",
          "kind": "import"
        },
        {
          "from": "./types.js",
          "kind": "import"
        }
      ],
      "dependencies": [
        "src/package.ts",
        "src/prompts.ts",
        "src/types.ts",
        "src/ui.ts",
        "src/utils/security.ts",
        "src/workspace.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/package.ts": {
      "imports": [
        {
          "from": "fs-extra",
          "kind": "import"
        },
        {
          "from": "path",
          "kind": "import"
        },
        {
          "from": "./pm.js",
          "kind": "import"
        },
        {
          "from": "./ui.js",
          "kind": "import"
        },
        {
          "from": "./types.js",
          "kind": "import"
        }
      ],
      "dependencies": [
        "src/pm.ts",
        "src/types.ts",
        "src/ui.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/pm.ts": {
      "imports": [
        {
          "from": "fs",
          "kind": "import",
          "imported": [
            "existsSync",
            "readFileSync"
          ]
        },
        {
          "from": "path",
          "kind": "import",
          "imported": [
            "join"
          ]
        },
        {
          "from": "./utils/security.js",
          "kind": "import",
          "imported": [
            "SecurityValidator",
            "ErrorUtils"
          ]
        }
      ],
      "dependencies": [
        "src/utils/security.ts"
      ],
      "functions": [
        {
          "name": "detectPM",
          "params": [
            {
              "name": "dir",
              "type": "string"
            }
          ],
          "isAsync": false,
          "isExported": true,
          "returnType": "'npm' | 'yarn' | 'pnpm'"
        },
        {
          "name": "pmRun",
          "params": [
            {
              "name": "pm",
              "type": "'npm' | 'yarn' | 'pnpm'"
            },
            {
              "name": "alias",
              "type": "string"
            },
            {
              "name": "script",
              "type": "string"
            }
          ],
          "isAsync": false,
          "isExported": true,
          "returnType": "string"
        }
      ],
      "classes": [],
      "constants": []
    },
    "src/prompts.ts": {
      "imports": [
        {
          "from": "@inquirer/prompts",
          "kind": "import",
          "imported": [
            "input",
            "checkbox",
            "confirm"
          ]
        },
        {
          "from": "path",
          "kind": "import",
          "imported": [
            "basename"
          ]
        },
        {
          "from": "./git.js",
          "kind": "import",
          "imported": [
            "discoverRepos",
            "currentBranch",
            "isBranchCheckedOut"
          ]
        },
        {
          "from": "./types.js",
          "kind": "import",
          "imported": [
            "RepoPick"
          ]
        },
        {
          "from": "./ui.js",
          "kind": "import",
          "imported": [
            "ui"
          ]
        },
        {
          "from": "./utils/security.js",
          "kind": "import",
          "imported": [
            "ErrorUtils",
            "SecurityValidator"
          ]
        }
      ],
      "dependencies": [
        "src/git.ts",
        "src/types.ts",
        "src/ui.ts",
        "src/utils/security.ts"
      ],
      "functions": [
        {
          "name": "getUserSelections",
          "params": [],
          "isAsync": true,
          "isExported": true,
          "returnType": "Promise<RepoPick[]>"
        },
        {
          "name": "handlePromptError",
          "params": [
            {
              "name": "error",
              "type": "unknown"
            }
          ],
          "isAsync": false,
          "isExported": true,
          "returnType": "void"
        }
      ],
      "classes": [
        {
          "name": "UserCancelledError",
          "isExported": true,
          "methods": [],
          "properties": [],
          "extends": "Error"
        }
      ],
      "constants": []
    },
    "src/types.ts": {
      "imports": [],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/ui.ts": {
      "imports": [
        {
          "from": "picocolors",
          "kind": "import",
          "isDefault": true
        }
      ],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": [
        {
          "name": "ui",
          "initKind": "unknown",
          "isExported": true
        }
      ]
    },
    "src/utils/security.ts": {
      "imports": [
        {
          "from": "path",
          "kind": "import"
        }
      ],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "src/workspace.ts": {
      "imports": [
        {
          "from": "path",
          "kind": "import",
          "imported": [
            "resolve",
            "join"
          ]
        },
        {
          "from": "fs-extra",
          "kind": "import",
          "isDefault": true
        },
        {
          "from": "execa",
          "kind": "import",
          "imported": [
            "execa"
          ]
        },
        {
          "from": "./fsops.js",
          "kind": "import",
          "imported": [
            "ensureWorkspaceSkeleton",
            "primeNodeModules",
            "copyEnvFiles"
          ]
        },
        {
          "from": "./git.js",
          "kind": "import",
          "imported": [
            "addWorktree"
          ]
        },
        {
          "from": "./pm.js",
          "kind": "import",
          "imported": [
            "detectPM"
          ]
        },
        {
          "from": "./ui.js",
          "kind": "import",
          "imported": [
            "ui"
          ]
        },
        {
          "from": "./utils/security.js",
          "kind": "import",
          "imported": [
            "SecurityValidator",
            "ErrorUtils"
          ]
        },
        {
          "from": "./types.js",
          "kind": "import",
          "imported": [
            "RepoPick",
            "RepoMounted"
          ]
        }
      ],
      "dependencies": [
        "src/fsops.ts",
        "src/git.ts",
        "src/pm.ts",
        "src/types.ts",
        "src/ui.ts",
        "src/utils/security.ts"
      ],
      "functions": [
        {
          "name": "createWorkspace",
          "params": [
            {
              "name": "repoPicks",
              "type": "RepoPick[]"
            }
          ],
          "isAsync": true,
          "isExported": true,
          "returnType": "Promise<{\n  wsDir: string;\n  mounted: RepoMounted[];\n}>"
        },
        {
          "name": "createFactpackFiles",
          "params": [
            {
              "name": "repos",
              "type": "RepoMounted[]"
            }
          ],
          "isAsync": true,
          "isExported": false,
          "returnType": "Promise<void>"
        },
        {
          "name": "generateWorkspacePrompt",
          "params": [
            {
              "name": "repos",
              "type": "RepoMounted[]"
            }
          ],
          "isAsync": false,
          "isExported": false,
          "returnType": "string"
        },
        {
          "name": "generateFallbackTemplate",
          "params": [
            {
              "name": "repos",
              "type": "RepoMounted[]"
            }
          ],
          "isAsync": false,
          "isExported": false,
          "returnType": "string"
        },
        {
          "name": "tryClaudeCliGeneration",
          "params": [
            {
              "name": "prompt",
              "type": "string"
            },
            {
              "name": "wsDir",
              "type": "string"
            }
          ],
          "isAsync": true,
          "isExported": false,
          "returnType": "Promise<boolean>"
        },
        {
          "name": "generateClaudeMd",
          "params": [
            {
              "name": "wsDir",
              "type": "string"
            },
            {
              "name": "repos",
              "type": "RepoMounted[]"
            }
          ],
          "isAsync": true,
          "isExported": true,
          "returnType": "Promise<void>"
        }
      ],
      "classes": [],
      "constants": []
    },
    "tests/fixtures/packageJsonFixtures.ts": {
      "imports": [
        {
          "from": "fs",
          "kind": "import",
          "imported": [
            "writeFileSync"
          ]
        },
        {
          "from": "path",
          "kind": "import",
          "imported": [
            "join"
          ]
        }
      ],
      "dependencies": [],
      "functions": [
        {
          "name": "createPackageJson",
          "params": [
            {
              "name": "dir",
              "type": "string"
            },
            {
              "name": "fixture",
              "type": "keyof typeof packageFixtures"
            }
          ],
          "isAsync": false,
          "isExported": true,
          "returnType": "void"
        }
      ],
      "classes": [],
      "constants": [
        {
          "name": "packageFixtures",
          "initKind": "unknown",
          "isExported": true
        }
      ]
    },
    "tests/fsops.test.ts": {
      "imports": [
        {
          "from": "vitest",
          "kind": "import"
        },
        {
          "from": "../src/fsops.js",
          "kind": "import"
        },
        {
          "from": "fs",
          "kind": "import"
        },
        {
          "from": "path",
          "kind": "import"
        },
        {
          "from": "execa",
          "kind": "import"
        },
        {
          "from": "./utils/testDir.js",
          "kind": "import"
        }
      ],
      "dependencies": [
        "src/fsops.ts",
        "tests/utils/testDir.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "tests/git.test.ts": {
      "imports": [
        {
          "from": "vitest",
          "kind": "import"
        },
        {
          "from": "../src/git.js",
          "kind": "import"
        },
        {
          "from": "../src/utils/security.js",
          "kind": "import"
        },
        {
          "from": "fs",
          "kind": "import"
        },
        {
          "from": "path",
          "kind": "import"
        },
        {
          "from": "execa",
          "kind": "import"
        },
        {
          "from": "./utils/testDir.js",
          "kind": "import"
        },
        {
          "from": "./utils/errorMatchers.js",
          "kind": "import"
        }
      ],
      "dependencies": [
        "src/git.ts",
        "src/utils/security.ts",
        "tests/utils/errorMatchers.ts",
        "tests/utils/testDir.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "tests/index.test.ts": {
      "imports": [
        {
          "from": "vitest",
          "kind": "import"
        },
        {
          "from": "../src/index.js",
          "kind": "import"
        },
        {
          "from": "../src/prompts.js",
          "kind": "import"
        },
        {
          "from": "../src/workspace.js",
          "kind": "import"
        },
        {
          "from": "../src/package.js",
          "kind": "import"
        },
        {
          "from": "../src/ui.js",
          "kind": "import"
        },
        {
          "from": "fs-extra",
          "kind": "import"
        },
        {
          "from": "./utils/errorMatchers.js",
          "kind": "import"
        }
      ],
      "dependencies": [
        "src/index.ts",
        "src/package.ts",
        "src/prompts.ts",
        "src/ui.ts",
        "src/workspace.ts",
        "tests/utils/errorMatchers.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "tests/integration.test.ts": {
      "imports": [
        {
          "from": "vitest",
          "kind": "import"
        },
        {
          "from": "fs",
          "kind": "import"
        },
        {
          "from": "path",
          "kind": "import"
        },
        {
          "from": "execa",
          "kind": "import"
        },
        {
          "from": "fs-extra",
          "kind": "import"
        },
        {
          "from": "../src/git.js",
          "kind": "import"
        },
        {
          "from": "../src/workspace.js",
          "kind": "import"
        },
        {
          "from": "../src/fsops.js",
          "kind": "import"
        },
        {
          "from": "../src/pm.js",
          "kind": "import"
        },
        {
          "from": "../src/types.js",
          "kind": "import"
        },
        {
          "from": "./utils/testDir.js",
          "kind": "import"
        },
        {
          "from": "./fixtures/packageJsonFixtures.js",
          "kind": "import"
        },
        {
          "from": "./utils/errorMatchers.js",
          "kind": "import"
        }
      ],
      "dependencies": [
        "src/fsops.ts",
        "src/git.ts",
        "src/pm.ts",
        "src/types.ts",
        "src/workspace.ts",
        "tests/fixtures/packageJsonFixtures.ts",
        "tests/utils/errorMatchers.ts",
        "tests/utils/testDir.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "tests/package.test.ts": {
      "imports": [
        {
          "from": "vitest",
          "kind": "import"
        },
        {
          "from": "../src/package.js",
          "kind": "import"
        },
        {
          "from": "fs-extra",
          "kind": "import"
        },
        {
          "from": "path",
          "kind": "import"
        },
        {
          "from": "../src/types.js",
          "kind": "import"
        }
      ],
      "dependencies": [
        "src/package.ts",
        "src/types.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "tests/pm.test.ts": {
      "imports": [
        {
          "from": "vitest",
          "kind": "import",
          "imported": [
            "describe",
            "test",
            "expect",
            "beforeEach",
            "afterEach"
          ]
        },
        {
          "from": "../src/pm.js",
          "kind": "import",
          "imported": [
            "detectPM",
            "pmRun"
          ]
        },
        {
          "from": "fs",
          "kind": "import",
          "imported": [
            "writeFileSync",
            "rmSync"
          ]
        },
        {
          "from": "path",
          "kind": "import",
          "imported": [
            "join"
          ]
        },
        {
          "from": "./utils/testDir.js",
          "kind": "import",
          "imported": [
            "createTestDir"
          ]
        }
      ],
      "dependencies": [
        "src/pm.ts",
        "tests/utils/testDir.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "tests/prompts.test.ts": {
      "imports": [
        {
          "from": "vitest",
          "kind": "import",
          "imported": [
            "describe",
            "test",
            "expect",
            "vi",
            "beforeEach",
            "afterEach"
          ]
        },
        {
          "from": "@inquirer/prompts",
          "kind": "import",
          "isNamespace": true
        },
        {
          "from": "../src/prompts.js",
          "kind": "import",
          "imported": [
            "getUserSelections",
            "UserCancelledError",
            "handlePromptError"
          ]
        },
        {
          "from": "../src/git.js",
          "kind": "import",
          "isNamespace": true
        },
        {
          "from": "../src/ui.js",
          "kind": "import",
          "isNamespace": true
        },
        {
          "from": "./utils/errorMatchers.js",
          "kind": "import",
          "imported": [
            "errorMatchers"
          ]
        }
      ],
      "dependencies": [
        "src/git.ts",
        "src/prompts.ts",
        "src/ui.ts",
        "tests/utils/errorMatchers.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "tests/utils/errorMatchers.ts": {
      "imports": [
        {
          "from": "vitest",
          "kind": "import",
          "imported": [
            "expect"
          ]
        }
      ],
      "dependencies": [],
      "functions": [
        {
          "name": "expectPromiseRejection",
          "params": [
            {
              "name": "promise",
              "type": "Promise<T>"
            },
            {
              "name": "matcher",
              "type": "ReturnType<typeof expect.objectContaining> | typeof expect.any"
            }
          ],
          "isAsync": false,
          "isExported": true,
          "returnType": "Promise<void>"
        }
      ],
      "classes": [],
      "constants": [
        {
          "name": "errorMatchers",
          "initKind": "object",
          "isExported": true
        }
      ]
    },
    "tests/utils/index.ts": {
      "imports": [
        {
          "from": "./testDir.js",
          "kind": "export",
          "imported": [
            "createTestDir",
            "TestDirManager"
          ]
        },
        {
          "from": "./errorMatchers.js",
          "kind": "export",
          "imported": [
            "errorMatchers",
            "expectPromiseRejection"
          ]
        },
        {
          "from": "../fixtures/packageJsonFixtures.js",
          "kind": "export",
          "imported": [
            "packageFixtures",
            "createPackageJson"
          ]
        }
      ],
      "dependencies": [
        "tests/fixtures/packageJsonFixtures.ts",
        "tests/utils/errorMatchers.ts",
        "tests/utils/testDir.ts"
      ],
      "functions": [],
      "classes": [],
      "constants": []
    },
    "tests/utils/testDir.ts": {
      "imports": [
        {
          "from": "fs",
          "kind": "import",
          "imported": [
            "mkdtempSync",
            "rmSync"
          ]
        },
        {
          "from": "path",
          "kind": "import",
          "imported": [
            "join"
          ]
        },
        {
          "from": "os",
          "kind": "import",
          "imported": [
            "tmpdir"
          ]
        }
      ],
      "dependencies": [],
      "functions": [
        {
          "name": "createTestDir",
          "params": [
            {
              "name": "prefix",
              "type": "string"
            },
            {
              "name": "testName",
              "type": "string",
              "optional": true
            }
          ],
          "isAsync": false,
          "isExported": true,
          "returnType": "string"
        }
      ],
      "classes": [
        {
          "name": "TestDirManager",
          "isExported": true,
          "methods": [
            {
              "name": "create",
              "params": [
                {
                  "name": "prefix",
                  "type": "string"
                },
                {
                  "name": "testName",
                  "type": "string",
                  "optional": true
                }
              ],
              "isAsync": false,
              "returnType": "string"
            },
            {
              "name": "cleanup",
              "params": [],
              "isAsync": false,
              "returnType": "void"
            }
          ],
          "properties": [
            {
              "name": "cleanupPaths",
              "type": "string[]",
              "isPrivate": true
            }
          ]
        }
      ],
      "constants": [
        {
          "name": "RANDOM_SUFFIX_LENGTH",
          "initKind": "literal",
          "isExported": false
        },
        {
          "name": "MAX_SAFE_NAME_LENGTH",
          "initKind": "literal",
          "isExported": false
        }
      ]
    },
    "vitest.config.ts": {
      "imports": [
        {
          "from": "vitest/config",
          "kind": "import",
          "imported": [
            "defineConfig"
          ]
        }
      ],
      "dependencies": [],
      "functions": [],
      "classes": [],
      "constants": []
    }
  }
}